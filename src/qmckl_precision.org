#+TITLE: Multi-precision
#+SETUPFILE: ../docs/theme.setup

#+NAME: filename
#+begin_src elisp tangle: no 
(file-name-nondirectory (substring buffer-file-name 0 -4))
#+end_src

 Controlling numerical precision enables optimizations. Here, the
 default parameters determining the target numerical precision and
 range are defined.

 #+NAME: table-precision
 | ~QMCKL_DEFAULT_PRECISION~ | 53 |
 | ~QMCKL_DEFAULT_RANGE~     | 11 |

 # We need to force Emacs not to indent the Python code:
 # -*- org-src-preserve-indentation: t 

#+begin_src python :var table=table-precision  :results drawer :exports result
""" This script generates the C and Fortran constants for the error
    codes from the org-mode table.
"""

result = [ "#+begin_src c :comments org :tangle (eval h)" ] 
for (text, code) in table:
    text=text.replace("~","")
    result += [ f"#define  {text:30s} {code:d}" ]
result += [ "#+end_src" ]
    
result += [ "" ] 

result += [ "#+begin_src f90 :comments org :tangle (eval fh)" ]
for (text, code) in table:
    text=text.replace("~","")
    result += [ f"   integer, parameter :: {text:30s} = {code:d}" ]
result += [ "#+end_src" ]

return '\n'.join(result)

#+end_src

#+RESULTS:
:results:
#+begin_src c :comments org :tangle (eval h)
#define  QMCKL_DEFAULT_PRECISION        53
#define  QMCKL_DEFAULT_RANGE            11
#+end_src

#+begin_src f90 :comments org :tangle (eval fh)
   integer, parameter :: QMCKL_DEFAULT_PRECISION        = 53
   integer, parameter :: QMCKL_DEFAULT_RANGE            = 11
#+end_src
:end:


# -*- mode: org -*-
# vim: syntax=c
